{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "Brazil South",
        "Central US",
        "East Aisa",
        "East US",
        "East US 2",
        "Japan East",
        "Japan West",
        "North Central US",
        "North Europe",
        "South Central US",
        "Southeast Aisa",
        "West Europe",
        "West US"
      ],
      "metadata": {
        "description": "The data center you want to install into."
      }
    },
    "numberOfBIGIPs": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of BIGIPs that will be deployed infront of your application."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A3",
      "metadata": {
        "description": "The size of the Virtual Hardware Instance."
      },
      "allowedValues": [
        "Standard_A3",
        "Standard_A4",
        "Standard_D2",
        "Standard_D5"
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name to login to the BIGIP."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to login to the BIGIP."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP(s) used to access the BIGIP."
      }
    }
  },
  "variables": {
    "virtualNetworkName": "[concat(parameters('dnsNameForPublicIP'),'-vnet')]",
    "dnsNameForPublicIP1": "[concat(parameters('dnsNameForPublicIP'),'one')]",
    "dnsNameForPublicIP2": "[concat(parameters('dnsNameForPublicIP'),'two')]",
    "vnetAddressPrefix": "10.10.0.0/16",
    "subnetName": "external",
    "subnetPrefix": "10.10.1.0/24",
    "ipAddress": "10.10.1.10",
    "nicNamePrefix": "[concat(parameters('dnsNameForPublicIP'),'-nic')]",
    "loadBalancerName": "[concat(parameters('dnsNameForPublicIP'),'-alb')]",
    "availabilitySetName": "[concat(parameters('dnsNameForPublicIP'),'-avset')]",
    "newStorageAccountName": "[concat(parameters('dnsNameForPublicIP'),'stor')]",
    "bigipNamePrefix": "[concat(parameters('dnsNameForPublicIP'),'-bigip')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "frontEndIPConfigID1": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd1')]",
    "frontEndIPConfigID2": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd2')]",
    "publicIPID1": "[resourceId('Microsoft.Network/publicIPAddresses',variables('dnsNameForPublicIP1'))]",
    "publicIPID2": "[resourceId('Microsoft.Network/publicIPAddresses',variables('dnsNameForPublicIP2'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
  "resources": [
    {
      "name": "[variables('newStorageAccountName')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('dnsNameForPublicIP1')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP1')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('dnsNameForPublicIP2')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "PublicIPAddress2"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP2')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicNamePrefix'),copyindex())]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'),'/inboundNatRules/guimgt', copyIndex())]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'),'/inboundNatRules/sshmgt', copyIndex())]"
      ],

      "copy": {
        "count": "[parameters('numberOfBIGIPs')]",
        "name": "niccopy"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('ipAddress'),add(0,copyindex()))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/', 'loadBalancerBackEnd')]"
                }
              ],

              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'), '/inboundNatRules/', 'sshmgt', copyIndex())]"
                },
                {
                  "id": "[concat(variables('lbID'), '/inboundNatRules/', 'guimgt', copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "AzureLoadBalancer"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('dnsNameForPublicIP1'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('dnsNameForPublicIP2'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[variables('loadBalancerName')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "loadBalancerFrontEnd1",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPID1')]"
              }
            }
          },
          {
            "name": "loadBalancerFrontEnd2",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPID2')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "loadBalancerBackEnd"
          }
        ],
        "loadBalancingRules": [
          {
            "Name": "APP1-HTTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd1')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe3')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 6441,
              "idleTimeoutInMinutes": 15
            }
          },
          {
            "Name": "APP2-HTTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd2')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe4')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 6442,
              "idleTimeoutInMinutes": 15
            }
          },
          {
            "Name": "APP1-HTTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd1')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe1')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8081,
              "idleTimeoutInMinutes": 15
            }
          },
          {
            "Name": "APP2-HTTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/loadBalancerFrontEnd2')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/loadBalancerBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe2')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 8082,
              "idleTimeoutInMinutes": 15
            }
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 8081,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe1"
          },
          {
            "properties": {
              "protocol": "Tcp",
              "port": 8082,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe2"
          },
          {
            "properties": {
              "protocol": "Tcp",
              "port": 6441,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe3"
          },
          {
            "properties": {
              "protocol": "Tcp",
              "port": 6442,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe4"
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "InboundNATRulesGUI"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('loadBalancerName'),'/guimgt', copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[parameters('numberOfBIGIPs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID1')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(8443)]",
        "backendPort": 443,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "InboundNATRulesSSH"
      },
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('loadBalancerName'),'/sshmgt', copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[parameters('numberOfBIGIPs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID1')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(8022)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "AvailabilitySet"
      },
      "location": "[parameters('location')]",
      "name": "[variables('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('bigipNamePrefix'),copyindex())]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "BIG-IPs"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]"
      ],
      "copy": {
        "count": "[parameters('numberOfBIGIPs')]",
        "name": "wafcopy"
      },
      "plan": {
        "name": "f5-bigip-virtual-edition-good-byol",
        "publisher": "f5-networks",
        "product": "f5-big-ip"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('bigipNamePrefix'),copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "f5-networks",
            "offer": "f5-big-ip",
            "sku": "f5-bigip-virtual-edition-good-byol",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('osdisk',copyindex())]",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('newStorageAccountName'),'/osDisk',copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('nicNamePrefix')),copyindex())]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',variables('newstorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "Documentation": {
      "type": "string",
      "value": "To configure these BIG-IP devices into a Device Service Cluster, please see the following documentation.  https://support.f5.com/kb/en-us/products/big-ip_ltm/manuals/product/bigip-device-service-clustering-admin-12-0-0.html?sr=50978566"
    }
  }
}